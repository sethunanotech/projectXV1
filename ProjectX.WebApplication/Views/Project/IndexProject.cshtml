@model IEnumerable<ProjectX.Application.Usecases.Projects.GetProjectResponse>

@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

<style>
   
    .table-responsive {
        margin-top: 30px;
    }

    .data {
        display: none;
    }
</style>
<script src="~/js/jquery.js"></script>
<div>
    <center style="font-size:30px; font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">PROJECT MASTER</center>
    <a asp-action="CreateProject" class="btn btn-outline-primary">Create Project </a>

</div>
<div class="table-responsive">
    <table class=" display  table-striped " id="MyTable">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.ID)</th>
                <th>@Html.DisplayNameFor(model => model.ClientID)</th>
                <th>@Html.DisplayNameFor(model => model.Title)</th>
                <th>@Html.DisplayNameFor(model => model.SecretCode)</th>
                <th>@Html.DisplayNameFor(model => model.Active)</th>
                <th>@Html.DisplayNameFor(model => model.CreatedOn)</th>
                <th>@Html.DisplayNameFor(model => model.CreatedBy)</th>
                <th>@Html.DisplayNameFor(model => model.LastModifiedBy)</th>
                <th>@Html.DisplayNameFor(model => model.LastModifiedOn)</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {

                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ID)</td>
                    <td>@Html.DisplayFor(modelItem => item.ClientID)</td>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>
                        <p class="data" id="@item.ID">@Html.DisplayFor(modelItem => item.SecretCode)</p>
                        <i class="fas fa-eye" id="show_eye" onclick="toggleSecret('@item.ID')"></i>

                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Active)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedOn)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastModifiedBy)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastModifiedOn)</td>
                    <td>
                        <div class="btn-group bg-danger">
                            <a asp-action="UpdateProject" asp-route-ProjectId="@item.ID" class="btn btn-primary">Edit</a>


                            <form asp-action="Delete" asp-route-ProjectId="@item.ID" onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                                <input type="hidden" asp-for="@item.ID" />
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            </form>
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    var isShowSecret;
   
    function toggleSecret(id) {
        isShowSecret = !isShowSecret;
        if (isShowSecret == true) {
            $("#" + id).show()          
         }
        else {
            $("#" + id).hide()           
        }
    }
    jQueryAjaxDelete = form => {
        if (confirm('Are you sure to delete this record ?')) {
            try {
                $.ajax({
                    type: 'POST',
                    url: form.action,
                    data: new FormData(form),
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        $('#GetUser').html(res.html);
                    },
                    error: function (err) {
                        console.log(err)
                    }
                })
            } catch (ex) {
                console.log(ex)
            }
        }
        return false;
    }
</script><script src="~/js/sweetalert.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

@try
{
    if (TempData["AddedProject"] != null)
    {
        <script>
            swal("", "Project Added Successfully", "success");
        </script>
    }
    if (TempData["FailedProject"] != null)
    {
        <script>
            swal("", "Project Failed", "error");
        </script>
    }
    if (TempData["EditedProject"] != null)
    {
        <script>
            swal("", "Project Updated Successfully", "success");
        </script>
    }
    if (TempData["DeleteProject"] != null)
    {
        <script>
            swal("", "Project Deleted Successfully", "success");
        </script>
    }
}
catch
{

}