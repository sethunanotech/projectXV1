@model IEnumerable<ProjectX.Application.Usecases.User.GetUserResponse>

@{
    ViewData["Title"] = "Index";
}


<html>
<head>

    <style>

        .table-responsive {
            margin-top: 30px;
        }
    </style>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

</head>
<body>
    <center style="font-size:30px; font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">USER MASTER</center>

    <div>
        <a asp-action="CreateUser" class="btn btn-outline-primary">Create User </a>

    </div>
    <div class="table-responsive">
        <table class=" display  table-striped " id="MyTable">
            <thead>
                <tr>
                    <th>S.NO</th>
                    <th>@Html.DisplayNameFor(model => model.ClientID)</th>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.UserName)</th>
                    <th>@Html.DisplayNameFor(model => model.Password)</th>
                    <th>@Html.DisplayNameFor(model => model.CreatedOn)</th>
                    <th>@Html.DisplayNameFor(model => model.CreatedBy)</th>
                    <th>@Html.DisplayNameFor(model => model.LastModifiedOn)</th>
                    <th>@Html.DisplayNameFor(model => model.LastModifiedBy)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int i = 1;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@i</td>@{
                            i++;
                        }
                        <td>@Html.DisplayFor(modelItem => item.ClientID)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                        <td>*********</td>
                        <td>@Html.DisplayFor(modelItem => item.CreatedOn)</td>
                        <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                        <td>@Html.DisplayFor(modelItem => item.LastModifiedOn)</td>
                        <td>@Html.DisplayFor(modelItem => item.LastModifiedBy)</td>
                       
                        <td>
                            <div class="btn-group bg-danger">
                                <a asp-action="UpdateUser" asp-route-userId="@item.Id" class="btn btn-primary">Edit</a>


                                <form asp-action="Delete" asp-route-userId="@item.Id" onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                                    <input type="hidden" asp-for="@item.Id" />
                                    <input type="submit" value="Delete" class="btn btn-danger" />
                                </form>
                            </div>

                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
    @try
    {
        if (TempData["AddedSuccessfully"] != null)
        {
            <script>
                swal("", "User Added Successfully", "success");
            </script>
        }
        if (TempData["Failed"] != null)
        {
            <script>
                swal("", "User data Failed", "error");
            </script>
        }
        if (TempData["EditedSuccessfully"] != null)
        {
            <script>
                swal("", "User Updated Successfully!", "success");
            </script>
        }
        if (TempData["Delete"] != null)
        {
            <script>
                swal("", "User Deleted Successfully!", "success");
            </script>
        }
    }
    catch
    {

    }
    <script>
        function DeleteConfirm() {
            swal({
                title: "Are you sure?",
                text: "Your will not be able to recover this imaginary file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false
            },
                function () {
                    swal("DeleteUser!", "Your imaginary file has been deleted.", "success");
                });
        }


        jQueryAjaxDelete = form => {
            if (confirm('Are you sure to delete this record ?')) {
                try {
                    $.ajax({
                        type: 'POST',
                        url: form.action,
                        data: new FormData(form),
                        contentType: false,
                        processData: false,
                        success: function (res) {
                            $('#IndexUser').html(res.html);
                        },
                        error: function (err) {
                            console.log(err)
                        }
                    })
                } catch (ex) {
                    console.log(ex)
                }
            }

            //prevent default form submit event
            return false;
        }
    </script>
</body>
</html>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
